@use '../abstracts/variables' as var;
@use '../abstracts/mixins' as mix;
@use 'sass:math';

.card-menu {
  button.trigger {
    position: relative;
    display: block;
    width: 100%;
    border: none;
    cursor: pointer;

    text-align: left;
    font-size: clamp(var.$font-size-small, 3vw, var.$font-size-base);
    font-weight: var.$font-weight-medium;
    background-color: var.$text-color-base;
    color: var.$text-color-primary;

    padding-top: var.$gutter-base;
    padding-bottom: var.$gutter-base;
    padding-right: (var.$gutter-base * 2);
    padding-left: (math.div(var.$gutter-base, 2));
    br {
      display: none;
      @include mix.breakpoint('custom-small', min) {
        display: inline-block;
      }
      @include mix.breakpoint('small', min) {
        display: none;
      }
      @include mix.breakpoint('x-large', min) {
        display: inline-block;
      }
    }
    &:not(:last-child) {
      border-bottom: 2px solid lighten(var.$text-color-base, 5%);
      @include mix.breakpoint('medium', min) {
        border-bottom: none;
        border-right: 2px solid lighten(var.$text-color-base, 5%);
      }
    }
    i {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      right: var.$gutter-base;
      visibility: hidden;
      color: var.$text-color-base;
      font-size: math.div(var.$heading-size, 1.5);
      @include mix.breakpoint('custom-small', min) {
        font-size: var.$heading-size;
      }
      @include mix.breakpoint('medium', min) {
        right: (math.div(var.$gutter-base, 2));
      }
      @include mix.breakpoint('x-large', min) {
        right: var.$gutter-base;
      }
    }
    &:hover {
      background-color: lighten(var.$text-color-base, 5%);
    }

    &.checked {
      border-color: transparent;
      color: var.$text-color-base;
      background-color: var.$background-color-chili;
      transition: background var.$transition-normal ease-in-out;
      & i {
        visibility: visible;
      }
      &:hover {
        background-color: lighten(var.$background-color-chili, 2%);
      }
    }
  }

  @include mix.breakpoint('medium', min) {
    display: flex;
  }
}

.wrapper {
  margin-top: var.$gutter-base;
  margin-bottom: (var.$gutter-base * 2);
  padding-left: var.$gutter-base;
  padding-right: var.$gutter-base;

  @include mix.breakpoint('small', min) {
    max-width: 500px;
    margin-left: auto;
    margin-right: auto;
  }

  @include mix.breakpoint('medium', min) {
    max-width: 1100px;
  }

  @include mix.breakpoint('large', min) {
  }

  .sub-heading {
    margin-bottom: var.$gutter-base;
    font-size: var.$heading-size;
    @include mix.breakpoint('small', min) {
      text-align: center;
    }
    @include mix.breakpoint('x-large', min) {
      font-size: var.$heading-size * 1.2;
    }
  }
}

.cards {
  @include mix.breakpoint('medium', min) {
    margin-right: -(var.$gutter-base);
  }
  .card {
    &-inner {
      display: block;
      border-radius: var.$radius * 3;
      overflow: hidden;
      box-shadow: var.$shadow-card;
      transition: transform var.$transition-normal * 2;
      &:hover {
        transform: scaleY(1.03);
        @include mix.breakpoint('small', min) {
          transform: scale(1.03);
        }
      }

      @include mix.breakpoint('medium', min) {
        margin-right: var.$gutter-base;
      }
    }

    &-thumbnail {
      background: linear-gradient(45deg, var.$background-color-base, var.$background-color-primary);
      img {
        object-fit: cover;
        object-position: center;
        height: 200px;
        @include mix.breakpoint('custom-small', min) {
          height: 250px;
        }
        @include mix.breakpoint('medium', min) {
          height: 200px;
        }
        &[alt] {
          font-size: var.$font-size-medium;
          font-weight: var.$font-weight-medium;
          text-align: center;
        }
      }
    }

    &-info {
      background: var.$background-color-base;
      padding: math.div(var.$gutter-base, 1.5);

      & > *:not(:last-child) {
        margin-bottom: math.div(var.$gutter-base, 2);
      }

      span {
        display: inline-block;
        &.academy {
          background-color: var.$background-color-primary;
          padding: var.$radius * 2;
          border-radius: var.$radius;
          color: darken(var.$text-color-base, 50%);
        }
        &.date {
          font-weight: var.$font-weight-medium;
          display: block;
        }
      }

      .card-title {
        font-size: math.div(var.$heading-size, 2);
      }

      .btn-wrap {
        text-align: right;
        .btn {
          border: 1px solid transparent;
          transition-property: color border;
          transition-duration: var.$transition-normal * 2;
          font-size: var.$font-size-base;
          &:hover {
            background-color: transparent;
            border: 1px solid var.$background-color-secondary;
            color: var.$background-color-secondary;
          }
        }
      }
    }

    @include mix.breakpoint('medium', max) {
      &:nth-child(n + 2) {
        margin-top: var.$gutter-base * 2;
      }
    }

    @include mix.breakpoint('large', max) {
      &:nth-child(n + 3) {
        margin-top: var.$gutter-base * 2;
      }
    }

    @include mix.breakpoint('large', min) {
      &:nth-child(n + 4) {
        margin-top: var.$gutter-base;
      }
    }

    @include mix.breakpoint('medium', min) {
      flex: 0 1 50%;
    }

    @include mix.breakpoint('large', min) {
      flex: 0 1 33.333%;
    }
  }

  @include mix.breakpoint('medium', min) {
    display: flex;
    flex-wrap: wrap;
  }
}
