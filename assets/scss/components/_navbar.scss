@use '../abstracts/variables' as var;
@use '../abstracts/mixins' as mix;
@use 'sass:math';

header {
  // For fixed navbar, un-comment this commented styles :)
  // position: fixed;
  // top: 0;
  // left: 0;
  // right: 0;
  // background-color: var.$background-color-primary;

  box-shadow: var.$shadow-bottom;

  .nav-wrapper {
    display: flex;
    justify-content: space-between;
    align-items: center;

    padding: math.div(var.$gutter-base, 2);
    @include mix.breakpoint('custom-medium', min) {
      padding-top: var.$gutter-base;
      padding-bottom: var.$gutter-base;
    }

    @include mix.breakpoint('x-large', min) {
      max-width: 1280px;
      margin-left: auto;
      margin-right: auto;
    }

    @include mix.breakpoint('xx-large', min) {
      max-width: 1480px;
    }

    .logo {
      width: clamp((var.$gutter-base * 1.7), 8vw, (var.$gutter-base * 2.5));
    }

    ul.nav-menu-items {
      list-style: none;
      line-height: normal;
      display: flex;
      align-items: flex-start;

      @include mix.breakpoint('custom-medium', max) {
        flex-direction: column;
        position: fixed;
        top: 0;
        left: 100%;
        width: 100%;
        height: 100vh;
        background-color: var.$text-color-base;
        padding-top: (var.$gutter-base * 3.5);
        padding-left: var.$gutter-base;
        padding-right: var.$gutter-base;
        transition: left (var.$transition-normal * 2) ease-in-out;
        font-size: var.$font-size-medium;
        &.open {
          left: 0;
        }
      }

      @include mix.breakpoint('custom-medium', min) {
        text-align: center;
        align-items: center;
        justify-content: flex-end;
        width: 100%;
        font-weight: var.$font-weight-medium;
        padding-left: math.div(var.$gutter-base, 3);
        font-size: var.$font-size-small;
      }

      @include mix.breakpoint('xx-large', min) {
        font-size: var.$font-size-base;
      }

      li {
        margin-bottom: var.$gutter-base;
        @include mix.breakpoint('custom-medium', min) {
          &:not(:last-child) {
            margin-bottom: 0;
            margin-right: var.$gutter-base;
          }
        }

        a {
          color: var.$text-color-primary;
          transition: color var.$transition-normal ease-out;
          &:hover {
            color: darken(var.$text-color-primary, 15%);
          }
          @include mix.breakpoint('custom-medium', min) {
            color: var.$text-color-base;
            transition: color var.$transition-normal ease-out;
            &:hover {
              color: darken(var.$text-color-base, 15%);
            }
          }
        }
      }

      .btn {
        margin-top: math.div(var.$gutter-base, 2);
        font-size: var.$font-size-base;
        @include mix.breakpoint('custom-medium', min) {
          font-size: var.$font-size-small;
          margin-top: 0;
        }
        @include mix.breakpoint('large', min) {
          margin-left: clamp(var.$gutter-base, 10vw, (var.$gutter-base * 3));
        }
      }

      br {
        display: none;
        @include mix.breakpoint('custom-medium', min) {
          display: inline-block;
        }
        @include mix.breakpoint('x-large', min) {
          display: none;
        }
      }
    }

    // nav menu button
    .menu-btn {
      user-select: none;
      appearance: none;
      position: relative;
      z-index: 99;
      border: none;
      outline: none;
      cursor: pointer;
      background-color: transparent;
      transform: scaleX(-1);
      -webkit-tap-highlight-color: transparent; 
      span {
        display: block;
        height: (var.$radius * 1.5);

        background-color: var.$text-color-base;
        border-radius: var.$radius;
        z-index: 1;
        transform-origin: 0 0;
        transition: (var.$transition-normal * 2);
        &:not(:last-child) {
          margin-bottom: var.$radius;
        }
        &:nth-child(1) {
          width: 56px;
        }
        &:nth-child(2) {
          width: 40px;
        }
        &:nth-child(3) {
          width: 30px;
        }
      }
      &.open {
        span {
          &:nth-child(1) {
            transform: translate(10px, -2px) rotate(45deg);
          }
          &:nth-child(2) {
            opacity: 0;
            transform: translateX(15px);
          }
          &:nth-child(3) {
            transform: translate(5px, 13px) rotate(-45deg);
            width: 56px;
          }
          background-color: var.$background-color-base;
        }
        &:hover span {
          background-color: var.$background-color-chili;
        }
      }
      @include mix.breakpoint('custom-medium', min) {
        display: none;
      }
    }
  }
}
